/*
 * This file is generated by jOOQ.
 */
package io.github.adorableskullmaster.nozomi.core.database.generated.tables.records;


import io.github.adorableskullmaster.nozomi.core.database.generated.tables.Applicantmodule;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ApplicantmoduleRecord extends UpdatableRecordImpl<ApplicantmoduleRecord> implements Record2<Long, Long> {

    private static final long serialVersionUID = 405342197;

    /**
     * Setter for <code>public.applicantmodule.applicantnotificationchannel</code>.
     */
    public void setApplicantnotificationchannel(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.applicantmodule.applicantnotificationchannel</code>.
     */
    public Long getApplicantnotificationchannel() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.applicantmodule.id</code>.
     */
    public void setId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.applicantmodule.id</code>.
     */
    public Long getId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Applicantmodule.APPLICANTMODULE.APPLICANTNOTIFICATIONCHANNEL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return Applicantmodule.APPLICANTMODULE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getApplicantnotificationchannel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getApplicantnotificationchannel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ApplicantmoduleRecord value1(Long value) {
        setApplicantnotificationchannel(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ApplicantmoduleRecord value2(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ApplicantmoduleRecord values(Long value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ApplicantmoduleRecord
     */
    public ApplicantmoduleRecord() {
        super(Applicantmodule.APPLICANTMODULE);
    }

    /**
     * Create a detached, initialised ApplicantmoduleRecord
     */
    public ApplicantmoduleRecord(Long applicantnotificationchannel, Long id) {
        super(Applicantmodule.APPLICANTMODULE);

        set(0, applicantnotificationchannel);
        set(1, id);
    }
}
