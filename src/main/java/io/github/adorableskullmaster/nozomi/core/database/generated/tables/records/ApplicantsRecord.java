/*
 * This file is generated by jOOQ.
 */
package io.github.adorableskullmaster.nozomi.core.database.generated.tables.records;


import io.github.adorableskullmaster.nozomi.core.database.generated.tables.Applicants;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class ApplicantsRecord extends UpdatableRecordImpl<ApplicantsRecord> implements Record2<Integer[], Long> {

  private static final long serialVersionUID = -1725083350;

  /**
   * Create a detached ApplicantsRecord
   */
  public ApplicantsRecord() {
    super(Applicants.APPLICANTS);
  }

  /**
   * Create a detached, initialised ApplicantsRecord
   */
  public ApplicantsRecord(Integer[] applicants, Long id) {
    super(Applicants.APPLICANTS);

    set(0, applicants);
    set(1, id);
  }

  /**
   * Getter for <code>public.applicants.applicants</code>.
   */
  public Integer[] getApplicants() {
    return (Integer[]) get(0);
  }

  /**
   * Setter for <code>public.applicants.applicants</code>.
   */
  public void setApplicants(Integer... value) {
    set(0, value);
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  /**
   * Getter for <code>public.applicants.id</code>.
   */
  public Long getId() {
    return (Long) get(1);
  }

  // -------------------------------------------------------------------------
  // Record2 type implementation
  // -------------------------------------------------------------------------

  /**
   * Setter for <code>public.applicants.id</code>.
   */
  public void setId(Long value) {
    set(1, value);
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Record1<Long> key() {
    return (Record1) super.key();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Row2<Integer[], Long> fieldsRow() {
    return (Row2) super.fieldsRow();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Row2<Integer[], Long> valuesRow() {
    return (Row2) super.valuesRow();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Field<Integer[]> field1() {
    return Applicants.APPLICANTS.APPLICANTS_;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Field<Long> field2() {
    return Applicants.APPLICANTS.ID;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Integer[] component1() {
    return getApplicants();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Long component2() {
    return getId();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Integer[] value1() {
    return getApplicants();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Long value2() {
    return getId();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public ApplicantsRecord value1(Integer... value) {
    setApplicants(value);
    return this;
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /**
   * {@inheritDoc}
   */
  @Override
  public ApplicantsRecord value2(Long value) {
    setId(value);
    return this;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public ApplicantsRecord values(Integer[] value1, Long value2) {
    value1(value1);
    value2(value2);
    return this;
  }
}
