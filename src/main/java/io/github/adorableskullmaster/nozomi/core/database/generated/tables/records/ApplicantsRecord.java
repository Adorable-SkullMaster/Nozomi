/*
 * This file is generated by jOOQ.
 */
package io.github.adorableskullmaster.nozomi.core.database.generated.tables.records;


import io.github.adorableskullmaster.nozomi.core.database.generated.tables.Applicants;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class ApplicantsRecord extends TableRecordImpl<ApplicantsRecord> implements Record2<Integer, Integer[]> {

  private static final long serialVersionUID = -1239263277;

  /**
   * Create a detached ApplicantsRecord
   */
  public ApplicantsRecord() {
    super(Applicants.APPLICANTS);
  }

  /**
   * Create a detached, initialised ApplicantsRecord
   */
  public ApplicantsRecord(Integer aid, Integer[] applicants) {
    super(Applicants.APPLICANTS);

    set(0, aid);
    set(1, applicants);
  }

  /**
   * Getter for <code>public.applicants.aid</code>.
   */
  public Integer getAid() {
    return (Integer) get(0);
  }

  /**
   * Setter for <code>public.applicants.aid</code>.
   */
  public void setAid(Integer value) {
    set(0, value);
  }

  // -------------------------------------------------------------------------
  // Record2 type implementation
  // -------------------------------------------------------------------------

  /**
   * Getter for <code>public.applicants.applicants</code>.
   */
  public Integer[] getApplicants() {
    return (Integer[]) get(1);
  }

  /**
   * Setter for <code>public.applicants.applicants</code>.
   */
  public void setApplicants(Integer... value) {
    set(1, value);
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Row2<Integer, Integer[]> fieldsRow() {
    return (Row2) super.fieldsRow();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Row2<Integer, Integer[]> valuesRow() {
    return (Row2) super.valuesRow();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Field<Integer> field1() {
    return Applicants.APPLICANTS.AID;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Field<Integer[]> field2() {
    return Applicants.APPLICANTS.APPLICANTS_;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Integer component1() {
    return getAid();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Integer[] component2() {
    return getApplicants();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Integer value1() {
    return getAid();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Integer[] value2() {
    return getApplicants();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public ApplicantsRecord value1(Integer value) {
    setAid(value);
    return this;
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /**
   * {@inheritDoc}
   */
  @Override
  public ApplicantsRecord value2(Integer... value) {
    setApplicants(value);
    return this;
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public ApplicantsRecord values(Integer value1, Integer[] value2) {
    value1(value1);
    value2(value2);
    return this;
  }
}
