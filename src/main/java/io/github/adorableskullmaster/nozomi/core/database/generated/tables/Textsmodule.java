/*
 * This file is generated by jOOQ.
 */
package io.github.adorableskullmaster.nozomi.core.database.generated.tables;


import io.github.adorableskullmaster.nozomi.core.database.generated.Indexes;
import io.github.adorableskullmaster.nozomi.core.database.generated.Keys;
import io.github.adorableskullmaster.nozomi.core.database.generated.Public;
import io.github.adorableskullmaster.nozomi.core.database.generated.tables.records.TextsmoduleRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Textsmodule extends TableImpl<TextsmoduleRecord> {

    private static final long serialVersionUID = -2091508604;

    /**
     * The reference instance of <code>public.textsmodule</code>
     */
    public static final Textsmodule TEXTSMODULE = new Textsmodule();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TextsmoduleRecord> getRecordType() {
        return TextsmoduleRecord.class;
    }

    /**
     * The column <code>public.textsmodule.join</code>.
     */
    public final TableField<TextsmoduleRecord, String> JOIN = createField("join", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.textsmodule.joinimage</code>.
     */
    public final TableField<TextsmoduleRecord, String> JOINIMAGE = createField("joinimage", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.textsmodule.leave</code>.
     */
    public final TableField<TextsmoduleRecord, String> LEAVE = createField("leave", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.textsmodule.leaveimage</code>.
     */
    public final TableField<TextsmoduleRecord, String> LEAVEIMAGE = createField("leaveimage", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.textsmodule.id</code>.
     */
    public final TableField<TextsmoduleRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.textsmodule.textschannel</code>.
     */
    public final TableField<TextsmoduleRecord, Long> TEXTSCHANNEL = createField("textschannel", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>public.textsmodule</code> table reference
     */
    public Textsmodule() {
        this(DSL.name("textsmodule"), null);
    }

    /**
     * Create an aliased <code>public.textsmodule</code> table reference
     */
    public Textsmodule(String alias) {
        this(DSL.name(alias), TEXTSMODULE);
    }

    /**
     * Create an aliased <code>public.textsmodule</code> table reference
     */
    public Textsmodule(Name alias) {
        this(alias, TEXTSMODULE);
    }

    private Textsmodule(Name alias, Table<TextsmoduleRecord> aliased) {
        this(alias, aliased, null);
    }

    private Textsmodule(Name alias, Table<TextsmoduleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Textsmodule(Table<O> child, ForeignKey<O, TextsmoduleRecord> key) {
        super(child, key, TEXTSMODULE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TEXTSMODULE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TextsmoduleRecord> getPrimaryKey() {
        return Keys.TEXTSMODULE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TextsmoduleRecord>> getKeys() {
        return Arrays.<UniqueKey<TextsmoduleRecord>>asList(Keys.TEXTSMODULE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TextsmoduleRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TextsmoduleRecord, ?>>asList(Keys.TEXTSMODULE__GUILD_ID);
    }

    public Guildconfig guildconfig() {
        return new Guildconfig(this, Keys.TEXTSMODULE__GUILD_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Textsmodule as(String alias) {
        return new Textsmodule(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Textsmodule as(Name alias) {
        return new Textsmodule(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Textsmodule rename(String name) {
        return new Textsmodule(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Textsmodule rename(Name name) {
        return new Textsmodule(name, null);
    }
}
