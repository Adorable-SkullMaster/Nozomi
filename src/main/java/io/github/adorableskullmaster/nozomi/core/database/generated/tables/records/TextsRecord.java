/*
 * This file is generated by jOOQ.
 */
package io.github.adorableskullmaster.nozomi.core.database.generated.tables.records;


import io.github.adorableskullmaster.nozomi.core.database.generated.tables.Texts;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TextsRecord extends UpdatableRecordImpl<TextsRecord> implements Record4<Long, String, String, String> {

    private static final long serialVersionUID = 2078147065;

    /**
     * Setter for <code>public.texts.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.texts.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.texts.join</code>.
     */
    public void setJoin(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.texts.join</code>.
     */
    public String getJoin() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.texts.leave</code>.
     */
    public void setLeave(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.texts.leave</code>.
     */
    public String getLeave() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.texts.joinimg</code>.
     */
    public void setJoinimg(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.texts.joinimg</code>.
     */
    public String getJoinimg() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Texts.TEXTS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Texts.TEXTS.JOIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Texts.TEXTS.LEAVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Texts.TEXTS.JOINIMG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getJoin();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getLeave();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getJoinimg();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getJoin();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getLeave();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getJoinimg();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TextsRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TextsRecord value2(String value) {
        setJoin(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TextsRecord value3(String value) {
        setLeave(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TextsRecord value4(String value) {
        setJoinimg(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TextsRecord values(Long value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TextsRecord
     */
    public TextsRecord() {
        super(Texts.TEXTS);
    }

    /**
     * Create a detached, initialised TextsRecord
     */
    public TextsRecord(Long id, String join, String leave, String joinimg) {
        super(Texts.TEXTS);

        set(0, id);
        set(1, join);
        set(2, leave);
        set(3, joinimg);
    }
}
