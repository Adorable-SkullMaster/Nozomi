/*
 * This file is generated by jOOQ.
 */
package io.github.adorableskullmaster.nozomi.core.database.generated.tables;


import io.github.adorableskullmaster.nozomi.core.database.generated.Indexes;
import io.github.adorableskullmaster.nozomi.core.database.generated.Keys;
import io.github.adorableskullmaster.nozomi.core.database.generated.Public;
import io.github.adorableskullmaster.nozomi.core.database.generated.tables.records.VacmodemoduleRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Vacmodemodule extends TableImpl<VacmodemoduleRecord> {

    private static final long serialVersionUID = -519837231;

    /**
     * The reference instance of <code>public.vacmodemodule</code>
     */
    public static final Vacmodemodule VACMODEMODULE = new Vacmodemodule();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VacmodemoduleRecord> getRecordType() {
        return VacmodemoduleRecord.class;
    }

    /**
     * The column <code>public.vacmodemodule.vmtrackerchannel</code>.
     */
    public final TableField<VacmodemoduleRecord, Long> VMTRACKERCHANNEL = createField("vmtrackerchannel", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.vacmodemodule.scorefilter</code>.
     */
    public final TableField<VacmodemoduleRecord, Integer> SCOREFILTER = createField("scorefilter", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.vacmodemodule.id</code>.
     */
    public final TableField<VacmodemoduleRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>public.vacmodemodule</code> table reference
     */
    public Vacmodemodule() {
        this(DSL.name("vacmodemodule"), null);
    }

    /**
     * Create an aliased <code>public.vacmodemodule</code> table reference
     */
    public Vacmodemodule(String alias) {
        this(DSL.name(alias), VACMODEMODULE);
    }

    /**
     * Create an aliased <code>public.vacmodemodule</code> table reference
     */
    public Vacmodemodule(Name alias) {
        this(alias, VACMODEMODULE);
    }

    private Vacmodemodule(Name alias, Table<VacmodemoduleRecord> aliased) {
        this(alias, aliased, null);
    }

    private Vacmodemodule(Name alias, Table<VacmodemoduleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Vacmodemodule(Table<O> child, ForeignKey<O, VacmodemoduleRecord> key) {
        super(child, key, VACMODEMODULE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.VACMODEMODULE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<VacmodemoduleRecord> getPrimaryKey() {
        return Keys.VACMODEMODULE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<VacmodemoduleRecord>> getKeys() {
        return Arrays.<UniqueKey<VacmodemoduleRecord>>asList(Keys.VACMODEMODULE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<VacmodemoduleRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<VacmodemoduleRecord, ?>>asList(Keys.VACMODEMODULE__GUILD_ID);
    }

    public Guildconfig guildconfig() {
        return new Guildconfig(this, Keys.VACMODEMODULE__GUILD_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Vacmodemodule as(String alias) {
        return new Vacmodemodule(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Vacmodemodule as(Name alias) {
        return new Vacmodemodule(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Vacmodemodule rename(String name) {
        return new Vacmodemodule(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Vacmodemodule rename(Name name) {
        return new Vacmodemodule(name, null);
    }
}
