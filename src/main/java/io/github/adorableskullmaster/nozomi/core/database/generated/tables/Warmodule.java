/*
 * This file is generated by jOOQ.
 */
package io.github.adorableskullmaster.nozomi.core.database.generated.tables;


import io.github.adorableskullmaster.nozomi.core.database.generated.Indexes;
import io.github.adorableskullmaster.nozomi.core.database.generated.Keys;
import io.github.adorableskullmaster.nozomi.core.database.generated.Public;
import io.github.adorableskullmaster.nozomi.core.database.generated.tables.records.WarmoduleRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Warmodule extends TableImpl<WarmoduleRecord> {

    private static final long serialVersionUID = 2106358902;

    /**
     * The reference instance of <code>public.warmodule</code>
     */
    public static final Warmodule WARMODULE = new Warmodule();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WarmoduleRecord> getRecordType() {
        return WarmoduleRecord.class;
    }

    /**
     * The column <code>public.warmodule.offensivewarchannel</code>.
     */
    public final TableField<WarmoduleRecord, Long> OFFENSIVEWARCHANNEL = createField("offensivewarchannel", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.warmodule.defensivewarchannel</code>.
     */
    public final TableField<WarmoduleRecord, Long> DEFENSIVEWARCHANNEL = createField("defensivewarchannel", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.warmodule.autocounter</code>.
     */
    public final TableField<WarmoduleRecord, Boolean> AUTOCOUNTER = createField("autocounter", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.warmodule.aaids</code>.
     */
    public final TableField<WarmoduleRecord, Integer[]> AAIDS = createField("aaids", org.jooq.impl.SQLDataType.INTEGER.getArrayDataType(), this, "");

    /**
     * The column <code>public.warmodule.roleping</code>.
     */
    public final TableField<WarmoduleRecord, Long> ROLEPING = createField("roleping", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.warmodule.id</code>.
     */
    public final TableField<WarmoduleRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>public.warmodule</code> table reference
     */
    public Warmodule() {
        this(DSL.name("warmodule"), null);
    }

    /**
     * Create an aliased <code>public.warmodule</code> table reference
     */
    public Warmodule(String alias) {
        this(DSL.name(alias), WARMODULE);
    }

    /**
     * Create an aliased <code>public.warmodule</code> table reference
     */
    public Warmodule(Name alias) {
        this(alias, WARMODULE);
    }

    private Warmodule(Name alias, Table<WarmoduleRecord> aliased) {
        this(alias, aliased, null);
    }

    private Warmodule(Name alias, Table<WarmoduleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Warmodule(Table<O> child, ForeignKey<O, WarmoduleRecord> key) {
        super(child, key, WARMODULE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.WARMODULE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<WarmoduleRecord> getPrimaryKey() {
        return Keys.WARMODULE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<WarmoduleRecord>> getKeys() {
        return Arrays.<UniqueKey<WarmoduleRecord>>asList(Keys.WARMODULE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<WarmoduleRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<WarmoduleRecord, ?>>asList(Keys.WARMODULE__GUILD_ID);
    }

    public Guildconfig guildconfig() {
        return new Guildconfig(this, Keys.WARMODULE__GUILD_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Warmodule as(String alias) {
        return new Warmodule(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Warmodule as(Name alias) {
        return new Warmodule(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Warmodule rename(String name) {
        return new Warmodule(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Warmodule rename(Name name) {
        return new Warmodule(name, null);
    }
}
