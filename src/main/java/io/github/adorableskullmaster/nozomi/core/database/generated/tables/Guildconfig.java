/*
 * This file is generated by jOOQ.
 */
package io.github.adorableskullmaster.nozomi.core.database.generated.tables;


import io.github.adorableskullmaster.nozomi.core.database.generated.Indexes;
import io.github.adorableskullmaster.nozomi.core.database.generated.Keys;
import io.github.adorableskullmaster.nozomi.core.database.generated.Public;
import io.github.adorableskullmaster.nozomi.core.database.generated.tables.records.GuildconfigRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Guildconfig extends TableImpl<GuildconfigRecord> {

    private static final long serialVersionUID = -233437334;

    /**
     * The reference instance of <code>public.guildconfig</code>
     */
    public static final Guildconfig GUILDCONFIG = new Guildconfig();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GuildconfigRecord> getRecordType() {
        return GuildconfigRecord.class;
    }

    /**
     * The column <code>public.guildconfig.id</code>.
     */
    public final TableField<GuildconfigRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.guildconfig.activated</code>.
     */
    public final TableField<GuildconfigRecord, Boolean> ACTIVATED = createField("activated", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.guildconfig.aaid</code>.
     */
    public final TableField<GuildconfigRecord, Integer> AAID = createField("aaid", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.guildconfig.warmodule</code>.
     */
    public final TableField<GuildconfigRecord, Boolean> WARMODULE = createField("warmodule", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.guildconfig.bankmodule</code>.
     */
    public final TableField<GuildconfigRecord, Boolean> BANKMODULE = createField("bankmodule", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.guildconfig.applicantmodule</code>.
     */
    public final TableField<GuildconfigRecord, Boolean> APPLICANTMODULE = createField("applicantmodule", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.guildconfig.vacmodemodule</code>.
     */
    public final TableField<GuildconfigRecord, Boolean> VACMODEMODULE = createField("vacmodemodule", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.guildconfig.textmodule</code>.
     */
    public final TableField<GuildconfigRecord, Boolean> TEXTMODULE = createField("textmodule", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.guildconfig.memberrole</code>.
     */
    public final TableField<GuildconfigRecord, Long> MEMBERROLE = createField("memberrole", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>public.guildconfig</code> table reference
     */
    public Guildconfig() {
        this(DSL.name("guildconfig"), null);
    }

    /**
     * Create an aliased <code>public.guildconfig</code> table reference
     */
    public Guildconfig(String alias) {
        this(DSL.name(alias), GUILDCONFIG);
    }

    /**
     * Create an aliased <code>public.guildconfig</code> table reference
     */
    public Guildconfig(Name alias) {
        this(alias, GUILDCONFIG);
    }

    private Guildconfig(Name alias, Table<GuildconfigRecord> aliased) {
        this(alias, aliased, null);
    }

    private Guildconfig(Name alias, Table<GuildconfigRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Guildconfig(Table<O> child, ForeignKey<O, GuildconfigRecord> key) {
        super(child, key, GUILDCONFIG);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.GUILDMODULES_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<GuildconfigRecord> getPrimaryKey() {
        return Keys.GUILDMODULES_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<GuildconfigRecord>> getKeys() {
        return Arrays.<UniqueKey<GuildconfigRecord>>asList(Keys.GUILDMODULES_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Guildconfig as(String alias) {
        return new Guildconfig(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Guildconfig as(Name alias) {
        return new Guildconfig(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Guildconfig rename(String name) {
        return new Guildconfig(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Guildconfig rename(Name name) {
        return new Guildconfig(name, null);
    }
}
